from xml.etree.ElementTree import Element

def createPropertyElement(property: str, value: str) -> Element:
    """Creates xml Element for <property name="{property}">{value}</property>
    """
    element  = Element('property', {'name': property})
    element.text = value
    return element


def makeXmlEditable(xml : Element) -> Element:
    """Edits the xml generated by vidpy to make it editable in shotcut

    Adds the the shotcut-exclusive xml tags to the appropriate locations in the xml
    """

    # make mlt shotcut editable
    tractor_element: Element = xml.find('.//tractor')
    tractor_element.append(createPropertyElement('shotcut', '1'))

    # add shotcut tags to filters
    for filter_element in xml.findall('.//filter'):
        mlt_service: Element = filter_element.find("./property[@name='mlt_service']").text
        match(mlt_service):
            case 'dynamictext': 
                filter_element.append(createPropertyElement('shotcut:filter', 'dynamicText'))
                filter_element.append(createPropertyElement('shotcut:usePointSize', '1'))
                filter_element.append(createPropertyElement('shotcut:pointSize', filter_element.find("./property[@name='size']").text))
            case 'qtext':
                filter_element.append(createPropertyElement('shotcut:filter', 'richText'))
            case 'mask_start':
                filter_element.append(createPropertyElement('shotcut:filter', 'maskFromFile'))

    return xml